{"ast":null,"code":"var _jsxFileName = \"/home/osvaldo/unix_tests/git/trybe-exercises/exercises/front-end/exercise-react-hooks-refactoring/src/TicTacToe.js\";\nimport React, { useState } from 'react';\nimport GameBoard from './GameBoard';\n\nfunction TicTacToe() {\n  const [activePlayer, setActivePlayer] = useState(1);\n  const [gameBoard, setGameBoard] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n  const toggleActivePlayer = () => setActivePlayer(activePlayer === 1 ? 2 : 1);\n\n  const updateState = cellClicked => {\n    if (gameBoard[cellClicked] !== 0) return false;\n    let newGameBoard = [...gameBoard];\n    newGameBoard[cellClicked] = activePlayer;\n    setGameBoard(newGameBoard);\n    toggleActivePlayer();\n  };\n\n  const victoryArchivedInLine = () => {\n    for (let i = 0; i <= 6; i += 3) {\n      if (gameBoard[i] === gameBoard[i + 1] && gameBoard[i + 1] === gameBoard[i + 2] && gameBoard[i] !== 0) return true;\n    }\n\n    return false;\n  };\n\n  const victoryArchivedInColumn = () => {\n    for (let i = 0; i <= 2; i++) {\n      if (gameBoard[i] === gameBoard[i + 3] && gameBoard[i + 3] === gameBoard[i + 6] && gameBoard[i] !== 0) return true;\n    }\n\n    return false;\n  };\n\n  const victoryArchivedInDiagonals = () => {\n    if (gameBoard[4] === 0) return false;\n    if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) return true;\n    if (gameBoard[2] === gameBoard[4] && gameBoard[4] === gameBoard[6]) return true;\n    return false;\n  };\n\n  const victoryArchieved = () => {\n    return victoryArchivedInLine() || victoryArchivedInColumn() || victoryArchivedInDiagonals();\n  };\n\n  if (victoryArchieved()) return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 34\n    }\n  }, \"Fim de Jogo\");\n  return /*#__PURE__*/React.createElement(GameBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default TicTacToe;","map":{"version":3,"sources":["/home/osvaldo/unix_tests/git/trybe-exercises/exercises/front-end/exercise-react-hooks-refactoring/src/TicTacToe.js"],"names":["React","useState","GameBoard","TicTacToe","activePlayer","setActivePlayer","gameBoard","setGameBoard","toggleActivePlayer","updateState","cellClicked","newGameBoard","victoryArchivedInLine","i","victoryArchivedInColumn","victoryArchivedInDiagonals","victoryArchieved"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAD,CAA1C;;AAEA,QAAMO,kBAAkB,GAAG,MAAMH,eAAe,CAACD,YAAY,KAAK,CAAjB,GAAqB,CAArB,GAAyB,CAA1B,CAAhD;;AAEA,QAAMK,WAAW,GAAIC,WAAD,IAAiB;AACnC,QAAIJ,SAAS,CAACI,WAAD,CAAT,KAA2B,CAA/B,EAAkC,OAAO,KAAP;AAElC,QAAIC,YAAY,GAAG,CAAC,GAAGL,SAAJ,CAAnB;AACAK,IAAAA,YAAY,CAACD,WAAD,CAAZ,GAA4BN,YAA5B;AACAG,IAAAA,YAAY,CAACI,YAAD,CAAZ;AACAH,IAAAA,kBAAkB;AACnB,GAPD;;AASA,QAAMI,qBAAqB,GAAG,MAAM;AAClC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;AAC9B,UACEP,SAAS,CAACO,CAAD,CAAT,KAAiBP,SAAS,CAACO,CAAC,GAAG,CAAL,CAA1B,IACAP,SAAS,CAACO,CAAC,GAAG,CAAL,CAAT,KAAqBP,SAAS,CAACO,CAAC,GAAG,CAAL,CAD9B,IAEAP,SAAS,CAACO,CAAD,CAAT,KAAiB,CAHnB,EAKE,OAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACD,GAVD;;AAYA,QAAMC,uBAAuB,GAAG,MAAM;AACpC,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UACEP,SAAS,CAACO,CAAD,CAAT,KAAiBP,SAAS,CAACO,CAAC,GAAG,CAAL,CAA1B,IACAP,SAAS,CAACO,CAAC,GAAG,CAAL,CAAT,KAAqBP,SAAS,CAACO,CAAC,GAAG,CAAL,CAD9B,IAEAP,SAAS,CAACO,CAAD,CAAT,KAAiB,CAHnB,EAKE,OAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACD,GAVD;;AAYA,QAAME,0BAA0B,GAAG,MAAM;AACvC,QAAIT,SAAS,CAAC,CAAD,CAAT,KAAiB,CAArB,EAAwB,OAAO,KAAP;AACxB,QAAIA,SAAS,CAAC,CAAD,CAAT,KAAiBA,SAAS,CAAC,CAAD,CAA1B,IAAiCA,SAAS,CAAC,CAAD,CAAT,KAAiBA,SAAS,CAAC,CAAD,CAA/D,EAAoE,OAAO,IAAP;AACpE,QAAIA,SAAS,CAAC,CAAD,CAAT,KAAiBA,SAAS,CAAC,CAAD,CAA1B,IAAiCA,SAAS,CAAC,CAAD,CAAT,KAAiBA,SAAS,CAAC,CAAD,CAA/D,EAAoE,OAAO,IAAP;AACpE,WAAO,KAAP;AACD,GALD;;AAOA,QAAMU,gBAAgB,GAAG,MAAM;AAC7B,WACEJ,qBAAqB,MAAME,uBAAuB,EAAlD,IAAwDC,0BAA0B,EADpF;AAGD,GAJD;;AAMA,MAAIC,gBAAgB,EAApB,EAAwB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACxB,sBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeb,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport GameBoard from './GameBoard';\n\nfunction TicTacToe() {\n  const [activePlayer, setActivePlayer] = useState(1);\n  const [gameBoard, setGameBoard] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n  const toggleActivePlayer = () => setActivePlayer(activePlayer === 1 ? 2 : 1);\n\n  const updateState = (cellClicked) => {\n    if (gameBoard[cellClicked] !== 0) return false;\n\n    let newGameBoard = [...gameBoard];\n    newGameBoard[cellClicked] = activePlayer;\n    setGameBoard(newGameBoard);\n    toggleActivePlayer();\n  };\n\n  const victoryArchivedInLine = () => {\n    for (let i = 0; i <= 6; i += 3) {\n      if (\n        gameBoard[i] === gameBoard[i + 1] &&\n        gameBoard[i + 1] === gameBoard[i + 2] &&\n        gameBoard[i] !== 0\n      )\n        return true;\n    }\n    return false;\n  };\n\n  const victoryArchivedInColumn = () => {\n    for (let i = 0; i <= 2; i++) {\n      if (\n        gameBoard[i] === gameBoard[i + 3] &&\n        gameBoard[i + 3] === gameBoard[i + 6] &&\n        gameBoard[i] !== 0\n      )\n        return true;\n    }\n    return false;\n  };\n\n  const victoryArchivedInDiagonals = () => {\n    if (gameBoard[4] === 0) return false;\n    if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) return true;\n    if (gameBoard[2] === gameBoard[4] && gameBoard[4] === gameBoard[6]) return true;\n    return false;\n  };\n\n  const victoryArchieved = () => {\n    return (\n      victoryArchivedInLine() || victoryArchivedInColumn() || victoryArchivedInDiagonals()\n    );\n  };\n\n  if (victoryArchieved()) return <h1>Fim de Jogo</h1>;\n  return <GameBoard />;\n}\n\nexport default TicTacToe;"]},"metadata":{},"sourceType":"module"}