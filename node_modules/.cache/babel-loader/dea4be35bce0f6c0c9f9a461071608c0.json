{"ast":null,"code":"var _jsxFileName = \"/home/osvaldo/unix_tests/git/trybe-exercises/exercises/front-end/exercise-react-hooks-refactoring/src/context/Provider.js\";\n// src/context/Provider.js\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport CarsContext from './CarsContext';\n\nfunction Provider({\n  children\n}) {\n  const [cars, setCars] = useState({\n    red: false,\n    blue: false,\n    yellow: false\n  });\n  const [signal, setSignal] = useState({\n    color: 'red'\n  });\n\n  const moveCar = (car, side) => {\n    setCars({ ...cars,\n      [car]: side\n    });\n  };\n\n  const changeSignal = signalColor => {\n    setSignal({ ...signal,\n      color: signalColor\n    });\n  };\n\n  const context = { ...this.state,\n    moveCar,\n    changeSignal\n  };\n  return /*#__PURE__*/React.createElement(CarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/osvaldo/unix_tests/git/trybe-exercises/exercises/front-end/exercise-react-hooks-refactoring/src/context/Provider.js"],"names":["PropTypes","React","useState","CarsContext","Provider","children","cars","setCars","red","blue","yellow","signal","setSignal","color","moveCar","car","side","changeSignal","signalColor","context","state","propTypes","node","isRequired"],"mappings":";AAAA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,GAAG,EAAE,KAD4B;AAEjCC,IAAAA,IAAI,EAAE,KAF2B;AAGjCC,IAAAA,MAAM,EAAE;AAHyB,GAAD,CAAlC;AAKA,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBV,QAAQ,CAAC;AACrCW,IAAAA,KAAK,EAAE;AAD8B,GAAD,CAAtC;;AAIA,QAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC7BT,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACS,GAAD,GAAOC;AAFD,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,YAAY,GAAIC,WAAD,IAAiB;AACpCN,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAERE,MAAAA,KAAK,EAAEK;AAFC,KAAD,CAAT;AAID,GALD;;AAOA,QAAMC,OAAO,GAAG,EACd,GAAG,KAAKC,KADM;AAEdN,IAAAA,OAFc;AAGdG,IAAAA;AAHc,GAAhB;AAMA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QADH,CADF;AAKD;;AAAA;AAEDD,QAAQ,CAACiB,SAAT,GAAqB;AACnBhB,EAAAA,QAAQ,EAAEL,SAAS,CAACsB,IAAV,CAAeC;AADN,CAArB;AAIA,eAAenB,QAAf","sourcesContent":["// src/context/Provider.js\n\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport CarsContext from './CarsContext';\n\nfunction Provider({ children }) {\n  const [ cars, setCars]  = useState({\n    red: false,\n    blue: false,\n    yellow: false,\n  })\n  const [ signal, setSignal ] = useState({\n    color: 'red',\n  })\n\n  const moveCar = (car, side) => {\n    setCars({\n      ...cars,\n      [car]: side,\n    })\n  };\n\n  const changeSignal = (signalColor) => {\n    setSignal({\n      ...signal,\n      color: signalColor\n    })\n  };\n\n  const context = {\n    ...this.state,\n    moveCar,\n    changeSignal,\n  };\n\n  return (\n    <CarsContext.Provider value={context}>\n      {children}\n    </CarsContext.Provider>\n  );\n};\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}